// <auto-generated />
using System;
using InventarioDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventarioDAL.Migrations
{
    [DbContext(typeof(Ciclo8InventarioContext))]
    [Migration("20241114020400_extender la cantidad de caracteres en la contraseña del usuario")]
    partial class extenderlacantidaddecaracteresenlacontraseñadelusuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventarioDAL.Brand", b =>
                {
                    b.Property<int>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_brand");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBrand"));

                    b.Property<string>("BrandCountry")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("brand_country");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("brand_name");

                    b.Property<bool>("BrandStatus")
                        .HasColumnType("bit")
                        .HasColumnName("brand_status");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int")
                        .HasColumnName("id_supplier");

                    b.HasKey("IdBrand")
                        .HasName("PK__brand__4D3CE1286A7467AB");

                    b.HasIndex("IdSupplier");

                    b.ToTable("brand", "sale");
                });

            modelBuilder.Entity("InventarioDAL.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_category");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("category_name");

                    b.Property<bool>("CategoryStatus")
                        .HasColumnType("bit")
                        .HasColumnName("category_status");

                    b.HasKey("IdCategory")
                        .HasName("PK__category__E548B673DA2BB3C4");

                    b.ToTable("category", "catalog");
                });

            modelBuilder.Entity("InventarioDAL.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("ClientComplementAddress")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("client_complement_address");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("client_name");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("client_phone");

                    b.Property<int>("IdDistrict")
                        .HasColumnType("int")
                        .HasColumnName("id_district");

                    b.HasKey("IdClient")
                        .HasName("PK__client__6EC2B6C0E131A88B");

                    b.HasIndex("IdDistrict");

                    b.ToTable("client", "sale");
                });

            modelBuilder.Entity("InventarioDAL.Deparment", b =>
                {
                    b.Property<int>("IdDeparment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_deparment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeparment"));

                    b.Property<string>("DeparmentName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("deparment_name");

                    b.HasKey("IdDeparment")
                        .HasName("PK__deparmen__822391585D084085");

                    b.ToTable("deparment", "catalog");
                });

            modelBuilder.Entity("InventarioDAL.District", b =>
                {
                    b.Property<int>("IdDistrict")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_district");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDistrict"));

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("district_name");

                    b.Property<int>("IdMunicipality")
                        .HasColumnType("int")
                        .HasColumnName("id_municipality");

                    b.HasKey("IdDistrict")
                        .HasName("PK__district__65E6DD955C563318");

                    b.HasIndex("IdMunicipality");

                    b.ToTable("district", "catalog");
                });

            modelBuilder.Entity("InventarioDAL.InventoryMovement", b =>
                {
                    b.Property<int>("IdMovement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_movement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovement"));

                    b.Property<int?>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.Property<int?>("IdSupplier")
                        .HasColumnType("int")
                        .HasColumnName("id_supplier");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<DateOnly?>("MovementDate")
                        .HasColumnType("date")
                        .HasColumnName("movement_date");

                    b.Property<bool?>("MovementType")
                        .HasColumnType("bit")
                        .HasColumnName("movement_type");

                    b.HasKey("IdMovement")
                        .HasName("PK__inventor__465F1AE4D4A7E848");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdSupplier");

                    b.HasIndex("IdUser");

                    b.ToTable("inventory_movement", "sale");
                });

            modelBuilder.Entity("InventarioDAL.InventoryMoventDetail", b =>
                {
                    b.Property<int>("IdMoventDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_movent_detail");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoventDetail"));

                    b.Property<int>("IdMovement")
                        .HasColumnType("int")
                        .HasColumnName("id_movement");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<string>("TotalCost")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("total_cost");

                    b.Property<string>("UnitCost")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("unit_cost");

                    b.HasKey("IdMoventDetail")
                        .HasName("PK__inventor__9CE4D813C247B080");

                    b.HasIndex("IdMovement");

                    b.HasIndex("IdProduct");

                    b.ToTable("inventory_movent_detail", "sale");
                });

            modelBuilder.Entity("InventarioDAL.Municipality", b =>
                {
                    b.Property<int>("IdMunicipality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_municipality");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMunicipality"));

                    b.Property<int>("IdDeparment")
                        .HasColumnType("int")
                        .HasColumnName("id_deparment");

                    b.Property<string>("MunicipalityName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("municipality_name");

                    b.HasKey("IdMunicipality")
                        .HasName("PK__municipa__8060473BB7AF71E3");

                    b.HasIndex("IdDeparment");

                    b.ToTable("municipality", "catalog");
                });

            modelBuilder.Entity("InventarioDAL.Permission", b =>
                {
                    b.Property<int>("IdPermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_permission");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermission"));

                    b.Property<string>("PermissionName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("permission_name");

                    b.Property<bool>("PermissionStatus")
                        .HasColumnType("bit")
                        .HasColumnName("permission_status");

                    b.HasKey("IdPermission")
                        .HasName("PK__permissi__5180B3BFAE25F8B0");

                    b.ToTable("permission", "administration");
                });

            modelBuilder.Entity("InventarioDAL.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<int>("IdBrand")
                        .HasColumnType("int")
                        .HasColumnName("id_brand");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("id_category");

                    b.Property<int>("IdUnitMeasure")
                        .HasColumnType("int")
                        .HasColumnName("id_unit_measure");

                    b.Property<int>("IdWarehouse")
                        .HasColumnType("int")
                        .HasColumnName("id_warehouse");

                    b.Property<string>("ProductBatch")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("product_batch");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("product_description");

                    b.Property<DateOnly>("ProductExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("product_expiration_date");

                    b.Property<DateOnly>("ProductFabricationDate")
                        .HasColumnType("date")
                        .HasColumnName("product_fabrication_date");

                    b.Property<string>("ProductName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("product_name");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.Property<string>("ProductReference")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("product_reference");

                    b.Property<string>("ProductSerial")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("product_serial");

                    b.Property<bool>("ProductStatus")
                        .HasColumnType("bit")
                        .HasColumnName("product_status");

                    b.HasKey("IdProduct")
                        .HasName("PK__product__BA39E84F6A3D2F5E");

                    b.HasIndex("IdBrand");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdUnitMeasure");

                    b.HasIndex("IdWarehouse");

                    b.ToTable("product", "product");
                });

            modelBuilder.Entity("InventarioDAL.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("role_name");

                    b.Property<bool>("RoleStatus")
                        .HasColumnType("bit")
                        .HasColumnName("role_status");

                    b.HasKey("IdRole")
                        .HasName("PK__role__3D48441D3F794731");

                    b.ToTable("role", "administration");
                });

            modelBuilder.Entity("InventarioDAL.RolePermission", b =>
                {
                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<int>("IdPermission")
                        .HasColumnType("int")
                        .HasColumnName("id_permission");

                    b.Property<bool>("RolePermissionStatus")
                        .HasColumnType("bit")
                        .HasColumnName("role_permission_status");

                    b.HasKey("IdRole", "IdPermission")
                        .HasName("PK__role_per__D8504F26554CE3BE");

                    b.HasIndex("IdPermission");

                    b.ToTable("role_permission", "administration");
                });

            modelBuilder.Entity("InventarioDAL.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_supplier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("supplier_address");

                    b.Property<string>("SupplierCountry")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("supplier_country");

                    b.Property<string>("SupplierEmail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("supplier_email");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("supplier_name");

                    b.Property<string>("SupplierPhone")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("supplier_phone");

                    b.Property<bool>("SupplierStatus")
                        .HasColumnType("bit")
                        .HasColumnName("supplier_status");

                    b.HasKey("IdSupplier")
                        .HasName("PK__supplier__F6C576E6C554F6F9");

                    b.ToTable("supplier", "sale");
                });

            modelBuilder.Entity("InventarioDAL.SupplierContact", b =>
                {
                    b.Property<int>("IdContactSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contact_supplier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContactSupplier"));

                    b.Property<string>("ContactSupplierEmail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("contact_supplier_email");

                    b.Property<string>("ContactSupplierName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("contact_supplier_name");

                    b.Property<string>("ContactSupplierPhone")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("contact_supplier_phone");

                    b.Property<bool>("ContactSupplierStatus")
                        .HasColumnType("bit")
                        .HasColumnName("contact_supplier_status");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("int")
                        .HasColumnName("id_supplier");

                    b.HasKey("IdContactSupplier")
                        .HasName("PK__supplier__DB73AB298CEA1B71");

                    b.HasIndex("IdSupplier");

                    b.ToTable("supplier_contact", "sale");
                });

            modelBuilder.Entity("InventarioDAL.UnitMeasure", b =>
                {
                    b.Property<int>("IdUnitMeasure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_unit_measure");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnitMeasure"));

                    b.Property<string>("UnitMeasureName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("unit_measure_name");

                    b.HasKey("IdUnitMeasure")
                        .HasName("PK__unit_mea__C1F80F579056E92A");

                    b.ToTable("unit_measure", "catalog");
                });

            modelBuilder.Entity("InventarioDAL.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("email");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("name_user");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("user_name");

                    b.Property<bool>("UserStatus")
                        .HasColumnType("bit")
                        .HasColumnName("user_status");

                    b.HasKey("IdUser")
                        .HasName("PK__user__D2D146371E661864");

                    b.ToTable("user", "administration");
                });

            modelBuilder.Entity("InventarioDAL.UserRole", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<bool>("UserRoleStatus")
                        .HasColumnType("bit")
                        .HasColumnName("user_role_status");

                    b.HasKey("IdUser", "IdRole")
                        .HasName("PK__user_rol__1105C27688FC510B");

                    b.HasIndex("IdRole");

                    b.ToTable("user_role", (string)null);
                });

            modelBuilder.Entity("InventarioDAL.Warehouse", b =>
                {
                    b.Property<int>("IdWarehouse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_warehouse");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWarehouse"));

                    b.Property<bool>("WarehouseClimateControlled")
                        .HasColumnType("bit")
                        .HasColumnName("warehouse_climate_controlled");

                    b.Property<string>("WarehouseLocation")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("warehouse_location");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("warehouse_name");

                    b.Property<bool>("WarehouseStatus")
                        .HasColumnType("bit")
                        .HasColumnName("warehouse_status");

                    b.HasKey("IdWarehouse")
                        .HasName("PK__warehous__BBAE61068F4D4915");

                    b.ToTable("warehouse", "catalog");
                });

            modelBuilder.Entity("InventarioDAL.Brand", b =>
                {
                    b.HasOne("InventarioDAL.Supplier", "IdSupplierNavigation")
                        .WithMany("Brands")
                        .HasForeignKey("IdSupplier")
                        .IsRequired()
                        .HasConstraintName("FK_brand_supplier");

                    b.Navigation("IdSupplierNavigation");
                });

            modelBuilder.Entity("InventarioDAL.Client", b =>
                {
                    b.HasOne("InventarioDAL.District", "IdDistrictNavigation")
                        .WithMany("Clients")
                        .HasForeignKey("IdDistrict")
                        .IsRequired()
                        .HasConstraintName("FK_client_district");

                    b.Navigation("IdDistrictNavigation");
                });

            modelBuilder.Entity("InventarioDAL.District", b =>
                {
                    b.HasOne("InventarioDAL.Municipality", "IdMunicipalityNavigation")
                        .WithMany("Districts")
                        .HasForeignKey("IdMunicipality")
                        .IsRequired()
                        .HasConstraintName("FK_district_municipality");

                    b.Navigation("IdMunicipalityNavigation");
                });

            modelBuilder.Entity("InventarioDAL.InventoryMovement", b =>
                {
                    b.HasOne("InventarioDAL.Client", "IdClientNavigation")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK_inventory_movement_client");

                    b.HasOne("InventarioDAL.Supplier", "IdSupplierNavigation")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("IdSupplier")
                        .HasConstraintName("FK_inventory_movement_supplier");

                    b.HasOne("InventarioDAL.User", "IdUserNavigation")
                        .WithMany("InventoryMovements")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_inventory_movement_user");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdSupplierNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("InventarioDAL.InventoryMoventDetail", b =>
                {
                    b.HasOne("InventarioDAL.InventoryMovement", "IdMovementNavigation")
                        .WithMany("InventoryMoventDetails")
                        .HasForeignKey("IdMovement")
                        .IsRequired()
                        .HasConstraintName("FK_inventory_movent_detail_inventory_movement");

                    b.HasOne("InventarioDAL.Product", "IdProductNavigation")
                        .WithMany("InventoryMoventDetails")
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("FK_inventory_movent_detail_product");

                    b.Navigation("IdMovementNavigation");

                    b.Navigation("IdProductNavigation");
                });

            modelBuilder.Entity("InventarioDAL.Municipality", b =>
                {
                    b.HasOne("InventarioDAL.Deparment", "IdDeparmentNavigation")
                        .WithMany("Municipalities")
                        .HasForeignKey("IdDeparment")
                        .IsRequired()
                        .HasConstraintName("FK_municipality_deparment");

                    b.Navigation("IdDeparmentNavigation");
                });

            modelBuilder.Entity("InventarioDAL.Product", b =>
                {
                    b.HasOne("InventarioDAL.Brand", "IdBrandNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdBrand")
                        .IsRequired()
                        .HasConstraintName("FK_product_brand");

                    b.HasOne("InventarioDAL.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK_product_category");

                    b.HasOne("InventarioDAL.UnitMeasure", "IdUnitMeasureNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdUnitMeasure")
                        .IsRequired()
                        .HasConstraintName("FK_product_unit_measure");

                    b.HasOne("InventarioDAL.Warehouse", "IdWarehouseNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdWarehouse")
                        .IsRequired()
                        .HasConstraintName("FK_product_warehouse");

                    b.Navigation("IdBrandNavigation");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdUnitMeasureNavigation");

                    b.Navigation("IdWarehouseNavigation");
                });

            modelBuilder.Entity("InventarioDAL.RolePermission", b =>
                {
                    b.HasOne("InventarioDAL.Permission", "IdPermissionNavigation")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdPermission")
                        .IsRequired()
                        .HasConstraintName("FK_role_permission_permission");

                    b.HasOne("InventarioDAL.Role", "IdRoleNavigation")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_role_permission_role");

                    b.Navigation("IdPermissionNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("InventarioDAL.SupplierContact", b =>
                {
                    b.HasOne("InventarioDAL.Supplier", "IdSupplierNavigation")
                        .WithMany("SupplierContacts")
                        .HasForeignKey("IdSupplier")
                        .IsRequired()
                        .HasConstraintName("FK_supplier_contact_supplier");

                    b.Navigation("IdSupplierNavigation");
                });

            modelBuilder.Entity("InventarioDAL.UserRole", b =>
                {
                    b.HasOne("InventarioDAL.Role", "IdRoleNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_user_role_role");

                    b.HasOne("InventarioDAL.User", "IdUserNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_user_role_user");

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("InventarioDAL.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventarioDAL.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventarioDAL.Client", b =>
                {
                    b.Navigation("InventoryMovements");
                });

            modelBuilder.Entity("InventarioDAL.Deparment", b =>
                {
                    b.Navigation("Municipalities");
                });

            modelBuilder.Entity("InventarioDAL.District", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("InventarioDAL.InventoryMovement", b =>
                {
                    b.Navigation("InventoryMoventDetails");
                });

            modelBuilder.Entity("InventarioDAL.Municipality", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("InventarioDAL.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("InventarioDAL.Product", b =>
                {
                    b.Navigation("InventoryMoventDetails");
                });

            modelBuilder.Entity("InventarioDAL.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("InventarioDAL.Supplier", b =>
                {
                    b.Navigation("Brands");

                    b.Navigation("InventoryMovements");

                    b.Navigation("SupplierContacts");
                });

            modelBuilder.Entity("InventarioDAL.UnitMeasure", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("InventarioDAL.User", b =>
                {
                    b.Navigation("InventoryMovements");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("InventarioDAL.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
